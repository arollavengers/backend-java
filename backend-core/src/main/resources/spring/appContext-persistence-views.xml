<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

  <context:component-scan base-package="arollavengers.core.repository"/>

  <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
    <property name="driverClass" value="org.h2.Driver"/>
    <!-- DB_CLOSE_DELAY=-1 is used to maintain database in memory after last connection is closed -->
    <property name="url" value="jdbc:h2:mem:arollavengers;DB_CLOSE_DELAY=-1"/>
  </bean>

  <!-- Define EntityManagerFactory. Note that there is no META-INF/persistence.xml in classpath -->
  <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

    <property name="persistenceUnitName" value="arollavengers"/>

    <property name="jpaVendorAdapter">
      <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="true"/>
        <property name="database" value="H2"/>
      </bean>
    </property>

    <property name="jpaProperties">
      <props>
        <!-- Have to set this because generateDdl in jpaVendor set this property to update -->
        <!-- This behaviour is specific to hibernate implementation -->
        <prop key="hibernate.hbm2ddl.auto">create</prop>
      </props>
    </property>

    <property name="packagesToScan" value="arollavengers.core.views"/>

    <property name="dataSource" ref="dataSource"/>

    <property name="loadTimeWeaver">
      <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
    </property>

  </bean>

  <!-- To make use of @Transactional annotation -->
  <tx:annotation-driven transaction-manager="transactionManager"/>

  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="emf"/>
  </bean>

</beans>